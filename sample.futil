import "primitives/std.lib";

component main {
  cells {
    x = prim std_reg(1);
    y = prim std_reg(1);
  }

  wires {

    group x-assign {
      x.in = 1'd1;
      x-assign[done] = 1'd1;
    }

    group y-assign {
      y.in = 1'd0;
      y-assign[done] = 1'd1;
    }
  }

  control {
    par {
      x-assign; y-assign;
    }
  }
}

// component main(go: 1) -> (done: 1) {
//   cells {
//     x = prim std_reg(2);
//     y = prim std_reg(2);
//   }

//   wires {
//     group par0 {
//       x-assign[go] = par0[go] ? 1'b1;
//       y-assign[go] = par0[go] ? 1'b1;
//       par0[done] = x-assign[done] & y-assign[done] & par0[go] ? 1'd1;
//     }
//     group x-assign {
//       x.in = par0[go] ? 2'b10;
//       x-assign[done] = 1'd1;
//     }
//     group y-assign {
//       y.in = par0[go] ? 2'b01;
//       y-assign[done] = 1'd1;
//     }
//   }

//   control {
//     par0;
//   }
// }


// component main {
//   cells {
//     x = prim std_reg(32);
//     comp = prim std_eq(32);
//   }

//   wires {
//     group init {
//       x.in = 32'd1;
//       init[done] = 1'b1;
//     }

//     group cond {
//       comp.right = x.out;
//       comp.left = 32'd1;
//       cond[done] = 1'b1;
//     }

//     group true {
//       x.in = 32'd2;
//       true[done] = 1'b1;
//     }

//     group false {
//       x.in = 32'd3;
//       false[done] = 1'b1;
//     }
//   }

//   control {
//     if comp.out with cond {
//       true;
//     } else {
//       false;
//     }
//   }
// }
