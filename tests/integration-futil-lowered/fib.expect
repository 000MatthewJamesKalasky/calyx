component main(go: 1) -> (done: 1) {
  cells {
    a0 = prim std_reg(32);
    add0 = prim std_add(32);
    add1 = prim std_add(32);
    b0 = prim std_reg(32);
    cond_computed0 = prim std_reg(1);
    cond_stored0 = prim std_reg(1);
    const0 = prim std_const(32, 1);
    const1 = prim std_const(32, 0);
    const2 = prim std_const(32, 1);
    const3 = prim std_const(32, 10);
    const4 = prim std_const(32, 1);
    done_reg0 = prim std_reg(1);
    fsm0 = prim std_reg(32);
    fsm1 = prim std_reg(32);
    fsm2 = prim std_reg(32);
    fsm3 = prim std_reg(32);
    i0 = prim std_reg(32);
    lt0 = prim std_lt(32);
    tmp0 = prim std_reg(32);
  }
  
  wires {
    a0.in = fsm0.out == 32'd0 & !(a0.done) & fsm3.out == 32'd0 & !(fsm0.out == 32'd2) & go ? const0.out;
    a0.write_en = fsm0.out == 32'd0 & !(a0.done) & fsm3.out == 32'd0 & !(fsm0.out == 32'd2) & go | fsm2.out == 32'd2 & !(a0.done) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 1'd1;
    fsm0.in = fsm0.out == 32'd0 & a0.done & fsm3.out == 32'd0 & !(fsm0.out == 32'd2) & go ? 32'd1;
    fsm0.write_en = fsm0.out == 32'd0 & a0.done & fsm3.out == 32'd0 & !(fsm0.out == 32'd2) & go | fsm0.out == 32'd1 & i0.done & fsm3.out == 32'd0 & !(fsm0.out == 32'd2) & go | fsm0.out == 32'd2 ? 1'd1;
    i0.in = fsm0.out == 32'd1 & !(i0.done) & fsm3.out == 32'd0 & !(fsm0.out == 32'd2) & go ? const1.out;
    i0.write_en = fsm0.out == 32'd1 & !(i0.done) & fsm3.out == 32'd0 & !(fsm0.out == 32'd2) & go | fsm1.out == 32'd1 & !(i0.done) & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 1'd1;
    fsm0.in = fsm0.out == 32'd1 & i0.done & fsm3.out == 32'd0 & !(fsm0.out == 32'd2) & go ? 32'd2;
    tmp0.in = fsm1.out == 32'd0 & !(tmp0.done) & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? b0.out;
    tmp0.write_en = fsm1.out == 32'd0 & !(tmp0.done) & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 1'd1;
    fsm1.in = fsm1.out == 32'd0 & tmp0.done & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 32'd1;
    fsm1.write_en = fsm1.out == 32'd0 & tmp0.done & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go | fsm1.out == 32'd1 & i0.done & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go | fsm1.out == 32'd2 ? 1'd1;
    i0.in = fsm1.out == 32'd1 & !(i0.done) & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? add0.out;
    add0.right = fsm1.out == 32'd1 & !(i0.done) & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? const4.out;
    add0.left = fsm1.out == 32'd1 & !(i0.done) & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? i0.out;
    fsm1.in = fsm1.out == 32'd1 & i0.done & fsm2.out == 32'd0 & !(fsm1.out == 32'd2) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 32'd2;
    fsm2.in = fsm2.out == 32'd0 & fsm1.out == 32'd2 & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 32'd1;
    fsm2.write_en = fsm2.out == 32'd0 & fsm1.out == 32'd2 & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go | fsm2.out == 32'd1 & b0.done & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go | fsm2.out == 32'd2 & a0.done & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go | fsm2.out == 32'd3 ? 1'd1;
    add1.left = fsm2.out == 32'd1 & !(b0.done) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? a0.out;
    b0.in = fsm2.out == 32'd1 & !(b0.done) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? add1.out;
    add1.right = fsm2.out == 32'd1 & !(b0.done) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? tmp0.out;
    fsm2.in = fsm2.out == 32'd1 & b0.done & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 32'd2;
    a0.in = fsm2.out == 32'd2 & !(a0.done) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? tmp0.out;
    fsm2.in = fsm2.out == 32'd2 & a0.done & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 32'd3;
    fsm3.in = fsm3.out == 32'd0 & fsm0.out == 32'd2 & go ? 32'd1;
    fsm3.write_en = fsm3.out == 32'd0 & fsm0.out == 32'd2 & go | fsm3.out == 32'd1 & b0.done & go | fsm3.out == 32'd2 & done_reg0.out & go | fsm3.out == 32'd3 ? 1'd1;
    b0.in = fsm3.out == 32'd1 & !(b0.done) & go ? const2.out;
    b0.write_en = fsm3.out == 32'd1 & !(b0.done) & go | fsm2.out == 32'd1 & !(b0.done) & cond_stored0.out & cond_computed0.out & !(fsm2.out == 32'd3) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 1'd1;
    fsm3.in = fsm3.out == 32'd1 & b0.done & go ? 32'd2;
    fsm3.in = fsm3.out == 32'd2 & done_reg0.out & go ? 32'd3;
    done = fsm3.out == 32'd3 ? 1'd1;
    lt0.right = !(cond_computed0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? const3.out;
    lt0.left = !(cond_computed0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? i0.out;
    cond_stored0.in = !(cond_computed0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? lt0.out;
    cond_computed0.in = !(cond_computed0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 1'd1;
    cond_stored0.write_en = !(cond_computed0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 1'd1;
    cond_computed0.write_en = !(cond_computed0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go | cond_stored0.out & cond_computed0.out & fsm2.out == 32'd3 & fsm3.out == 32'd2 & !(done_reg0.out) & go | cond_computed0.out & !(cond_stored0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 1'd1;
    done_reg0.in = cond_computed0.out & !(cond_stored0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 1'd1;
    done_reg0.write_en = cond_computed0.out & !(cond_stored0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go | done_reg0.out ? 1'd1;
    cond_computed0.in = cond_stored0.out & cond_computed0.out & fsm2.out == 32'd3 & fsm3.out == 32'd2 & !(done_reg0.out) & go | cond_computed0.out & !(cond_stored0.out) & fsm3.out == 32'd2 & !(done_reg0.out) & go ? 1'd0;
    fsm0.in = fsm0.out == 32'd2 ? 32'd0;
    fsm1.in = fsm1.out == 32'd2 ? 32'd0;
    fsm2.in = fsm2.out == 32'd3 ? 32'd0;
    fsm3.in = fsm3.out == 32'd3 ? 32'd0;
    done_reg0.in = done_reg0.out ? 1'd0;
  }
  
  control {
    (empty)
  }
}