component main(go: 1) -> (done: 1) {
  cells {
    a = prim std_reg(32);
    b = prim std_reg(32);
    cond_computed0 = prim std_reg(1);
    cond_stored0 = prim std_reg(1);
    const0 = prim std_const(32, 10);
    const1 = prim std_const(32, 1);
    const2 = prim std_const(32, 5);
    const3 = prim std_const(32, 20);
    const4 = prim std_const(32, 40);
    fsm0 = prim std_reg(32);
    fsm1 = prim std_reg(32);
    gt0 = prim std_gt(32);
    y = prim std_reg(32);
    z = prim std_reg(32);
  }
  
  wires {
    a.in = fsm0.out == 32'd0 & !(a.done) & fsm1.out == 32'd0 & !(fsm0.out == 32'd2) & go ? const0.out;
    a.write_en = fsm0.out == 32'd0 & !(a.done) & fsm1.out == 32'd0 & !(fsm0.out == 32'd2) & go ? 1'd1;
    fsm0.in = fsm0.out == 32'd0 & a.done & fsm1.out == 32'd0 & !(fsm0.out == 32'd2) & go ? 32'd1;
    fsm0.write_en = fsm0.out == 32'd0 & a.done & fsm1.out == 32'd0 & !(fsm0.out == 32'd2) & go | fsm0.out == 32'd1 & b.done & fsm1.out == 32'd0 & !(fsm0.out == 32'd2) & go | fsm0.out == 32'd2 ? 1'd1;
    b.in = fsm0.out == 32'd1 & !(b.done) & fsm1.out == 32'd0 & !(fsm0.out == 32'd2) & go ? const1.out;
    b.write_en = fsm0.out == 32'd1 & !(b.done) & fsm1.out == 32'd0 & !(fsm0.out == 32'd2) & go ? 1'd1;
    fsm0.in = fsm0.out == 32'd1 & b.done & fsm1.out == 32'd0 & !(fsm0.out == 32'd2) & go ? 32'd2;
    fsm1.in = fsm1.out == 32'd0 & fsm0.out == 32'd2 & go ? 32'd1;
    fsm1.write_en = fsm1.out == 32'd0 & fsm0.out == 32'd2 & go | fsm1.out == 32'd1 & y.done | z.done & go | fsm1.out == 32'd2 ? 1'd1;
    fsm1.in = fsm1.out == 32'd1 & y.done | z.done & go ? 32'd2;
    done = fsm1.out == 32'd2 ? 1'd1;
    gt0.left = !(cond_computed0.out) & fsm1.out == 32'd1 & !(y.done | z.done) & go ? a.out;
    gt0.right = !(cond_computed0.out) & fsm1.out == 32'd1 & !(y.done | z.done) & go ? const2.out;
    cond_stored0.in = !(cond_computed0.out) & fsm1.out == 32'd1 & !(y.done | z.done) & go ? gt0.out;
    cond_stored0.write_en = !(cond_computed0.out) & fsm1.out == 32'd1 & !(y.done | z.done) & go ? gt0.out;
    cond_computed0.in = !(cond_computed0.out) & fsm1.out == 32'd1 & !(y.done | z.done) & go ? 1'd1;
    cond_computed0.write_en = !(cond_computed0.out) & fsm1.out == 32'd1 & !(y.done | z.done) & go ? 1'd1;
    z.in = cond_computed0.out & !(cond_stored0.out) & fsm1.out == 32'd1 & !(y.done | z.done) & go ? const4.out;
    z.write_en = cond_computed0.out & !(cond_stored0.out) & fsm1.out == 32'd1 & !(y.done | z.done) & go ? 1'd1;
    y.in = cond_computed0.out & cond_stored0.out & fsm1.out == 32'd1 & !(y.done | z.done) & go ? const3.out;
    y.write_en = cond_computed0.out & cond_stored0.out & fsm1.out == 32'd1 & !(y.done | z.done) & go ? 1'd1;
    fsm0.in = fsm0.out == 32'd2 ? 32'd0;
    fsm1.in = fsm1.out == 32'd2 ? 32'd0;
  }
  
  control {
    (empty)
  }
}