decl alpha: ubit<32>[1];
decl beta: ubit<32>[1];
decl C: ubit<32>[8 bank 2][8 bank 2];
decl A: ubit<32>[8 bank 2][8 bank 2];
decl B: ubit<32>[8 bank 2][8 bank 2];

let alpha_ = alpha[0];
let beta_ = beta[0];

for (let i: ubit<4> = 0..8) unroll 2 {
  for (let j: ubit<4> = 0..8) unroll 2 {
    let C_i_j: ubit<32> = C[i][j];
    ---
    C[i][j] := C_i_j * beta_;
  }

  ---

  // Loop order has to change since j is not defined in the combine
  // block otherwise.
  for (let j: ubit<4> = 0..8) unroll 2 {
    for (let k: ubit<4> = 0..8) unroll 2 {
      let v: ubit<32> = alpha_ * A[i][k] * B[k][j];
    } combine {
      C[i][j] += v;
    }
  }
}
