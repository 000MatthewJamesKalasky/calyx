decl A: ubit<32>[8][8];

for (let i: ubit<4> = 0..8) {
  let j = (0 as ubit<4>);
  while (j < i) {
    let k: ubit<4> = (0 as ubit<4>);
    while(k < j) {
      let A_i_j = A[i][j];
      ---
      let A_i_k = A[i][k];
      ---
      let A_k_j = A[k][j];
      ---
      A[i][j] := A_i_j - A_i_k * A_k_j;

      // Update loop counter
      k := k + (1 as ubit<4>);
    }
    ---
    let A_i_j = A[i][j];
    ---
    let A_j_j = A[j][j];
    ---
    A[i][j] := A_i_j / A_j_j;

    // Update loop counter
    j := j + (1 as ubit<4>);
  }
  ---
  let j2: ubit<4> = i;
  while (j < (8 as ubit<4>)) {
    let k = (0 as ubit<4>);
    while (k < i) {
      let A_i_j = A[i][j];
      ---
      let A_i_k = A[i][k];
      ---
      let A_k_j = A[k][j];
      ---
      A[i][j] := A_i_j - A_i_k * A_k_j;
      // Update loop counter
      k := k + (1 as ubit<4>);
    }
    // Update loop counter
    j := j + (1 as ubit<4>);
  }
}
